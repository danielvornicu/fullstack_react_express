[{"D:\\Demos\\fullstack_react_express\\src\\index.js":"1","D:\\Demos\\fullstack_react_express\\src\\App.js":"2","D:\\Demos\\fullstack_react_express\\src\\reportWebVitals.js":"3","D:\\Demos\\fullstack_react_express\\src\\util.js":"4","D:\\Demos\\fullstack_react_express\\src\\users\\login.component.js":"5","D:\\Demos\\fullstack_react_express\\src\\shared\\AppHeader.component.js":"6","d:\\Demos\\fullstack_react_express\\src\\index.js":"7","d:\\Demos\\fullstack_react_express\\src\\App.js":"8","d:\\Demos\\fullstack_react_express\\src\\reportWebVitals.js":"9","d:\\Demos\\fullstack_react_express\\src\\users\\login.component.js":"10","d:\\Demos\\fullstack_react_express\\src\\util.js":"11","d:\\Demos\\fullstack_react_express\\src\\shared\\AppHeader.component.js":"12","D:\\Demos\\fullstack_react_express\\src\\users\\user-liste.component.js":"13","D:\\Demos\\fullstack_react_express\\src\\users\\user-fiche.component.js":"14","D:\\Demos\\fullstack_react_express\\src\\posts\\post-liste.component.js":"15","D:\\Demos\\fullstack_react_express\\src\\posts\\post-fiche.component.js":"16","d:\\Demos\\fullstack_react_express\\src\\users\\user-liste.component.js":"17","d:\\Demos\\fullstack_react_express\\src\\users\\user-fiche.component.js":"18","d:\\Demos\\fullstack_react_express\\src\\posts\\post-fiche.component.js":"19","d:\\Demos\\fullstack_react_express\\src\\posts\\post-liste.component.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":1179,"mtime":1615455888896,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1127,"mtime":1615456880682,"results":"25","hashOfConfig":"22"},{"size":2687,"mtime":1615308837228,"results":"26","hashOfConfig":"22"},{"size":2110,"mtime":1615309815397,"results":"27","hashOfConfig":"22"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":1179,"mtime":1615455888896,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":2687,"mtime":1615308837228,"results":"32","hashOfConfig":"29"},{"size":1127,"mtime":1615456880682,"results":"33","hashOfConfig":"29"},{"size":2110,"mtime":1615309815397,"results":"34","hashOfConfig":"29"},{"size":4616,"mtime":1615396257618,"results":"35","hashOfConfig":"22"},{"size":6874,"mtime":1615458024802,"results":"36","hashOfConfig":"22"},{"size":4359,"mtime":1615456948548,"results":"37","hashOfConfig":"22"},{"size":4209,"mtime":1615457751954,"results":"38","hashOfConfig":"22"},{"size":4616,"mtime":1615396257618,"results":"39","hashOfConfig":"29"},{"size":6874,"mtime":1615458024802,"results":"40","hashOfConfig":"29"},{"size":4209,"mtime":1615457751954,"results":"41","hashOfConfig":"29"},{"size":4359,"mtime":1615456948548,"results":"42","hashOfConfig":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"168toxp",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"st9ffb",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Demos\\fullstack_react_express\\src\\index.js",[],["86","87"],"D:\\Demos\\fullstack_react_express\\src\\App.js",[],"D:\\Demos\\fullstack_react_express\\src\\reportWebVitals.js",[],"D:\\Demos\\fullstack_react_express\\src\\util.js",[],"D:\\Demos\\fullstack_react_express\\src\\users\\login.component.js",[],"D:\\Demos\\fullstack_react_express\\src\\shared\\AppHeader.component.js",[],"d:\\Demos\\fullstack_react_express\\src\\index.js",[],"d:\\Demos\\fullstack_react_express\\src\\App.js",[],"d:\\Demos\\fullstack_react_express\\src\\reportWebVitals.js",[],"d:\\Demos\\fullstack_react_express\\src\\users\\login.component.js",[],"d:\\Demos\\fullstack_react_express\\src\\util.js",[],"d:\\Demos\\fullstack_react_express\\src\\shared\\AppHeader.component.js",[],"D:\\Demos\\fullstack_react_express\\src\\users\\user-liste.component.js",["88"],"import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, Grid, \r\n   Card, CardHeader, CardContent, CardActions, IconButton, \r\n   Typography, Button \r\n} from \"@material-ui/core\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, isAdmin, updateAppSettings } from \"../util\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:5000/api/users\";\r\n\r\nexport const UserListeComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n  const showPage = isAdmin();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const fetchUsers = async function(){\r\n    try{\r\n      let res = await fetch(USER_API_BASE_URL, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          setUsers([...json.users]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error fetching users \", err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <AppHeader tabValue={2} />\r\n      {!showPage && (<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          Admin area only\r\n                        </Typography>\r\n                      </Grid>\r\n                     </Grid>)}\r\n      {showPage && (\r\n        <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n          <Grid item style={{ marginBottom: \"5vh\" }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              Users List\r\n            </Typography>\r\n          </Grid>\r\n          \r\n          <Grid item container justify=\"center\" xs={12}>\r\n            {users && users.map((user, key) => {\r\n              return (\r\n                <User\r\n                  id = {user._id}\r\n                  key={key}\r\n                  userName={user.username}\r\n                  firstName={user.firstName}\r\n                  lastName={user.lastName}\r\n                  role={user.role}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst User = ({id, firstName, lastName, userName, role }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteById(id);\r\n  };\r\n\r\n  function onEdit(){\r\n    history.push(\"/users/\"+ id + \"/edit\");\r\n  };\r\n\r\n  //delete a user by id (HTTP GET)\r\n  async function deleteById(id){\r\n    try{\r\n      let url = USER_API_BASE_URL + \"/\" + id + \"/delete\";\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          refreshPage();\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error deleting user \", err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card elevation={3} className=\"User\">\r\n\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"User Avatar\">\r\n            {userName.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            {userName + \" (\" + role + \") \"}\r\n          </Typography>\r\n        }\r\n      />\r\n\r\n      <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\r\n            {firstName + \" \" + lastName}\r\n          </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing style={{ width: '100%', justifyContent: 'flex-end' }} >\r\n        <IconButton aria-label=\"Edit Post\"  onClick={onEdit} color=\"primary\">\r\n          <EditIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete Post\"  onClick={onDelete} color=\"secondary\" edge=\"end\">\r\n          <DeleteIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n    </Card>\r\n\r\n\r\n  );\r\n};","D:\\Demos\\fullstack_react_express\\src\\users\\user-fiche.component.js",[],"D:\\Demos\\fullstack_react_express\\src\\posts\\post-liste.component.js",["89","90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, \r\n       Avatar, Card, CardHeader, CardContent, CardActions, IconButton, \r\n        Typography, Button \r\n       } from \"@material-ui/core\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, updateAppSettings } from \"../util\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst POST_API_BASE_URL = \"http://localhost:5000/api/posts\";\r\n\r\nexport const PostListeComponent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const fetchPosts = async function(){\r\n    try{\r\n      let res = await fetch(POST_API_BASE_URL, { headers: constructHeader() });\r\n\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          setPosts([...json.posts]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error fetching posts \", err.message);\r\n    }\r\n  };\r\n\r\n  function formatDate(dateStr) {\r\n    var date = new Date(dateStr);\r\n\r\n    const month = date.getMonth() + 1;\r\n    const day   = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n\r\n    const monthString = month >= 10 ? month : `0${month}`;\r\n    const dayString    = day >= 10 ? day : `0${day}`;\r\n    const hoursString = hours >= 10 ? hours : `0${hours}`;\r\n    const minutesString = minutes >= 10 ? minutes : `0${minutes}`;\r\n\r\n    return `${dayString}/${monthString}/${date.getFullYear()} at ${hoursString}h${minutesString}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <AppHeader tabValue={0} />\r\n      {(\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" >\r\n\r\n          <Grid item style={{ marginBottom: \"5vh\" }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              Posts List\r\n            </Typography>\r\n          </Grid>\r\n          \r\n          <Grid item container justify=\"center\" >\r\n            {posts && posts.map((post, key) => {\r\n              return (\r\n                <Post\r\n                  key={key}\r\n                  id = {post._id}\r\n                  text={post.text}\r\n                  createdAt = {formatDate(post.createdAt)}\r\n                  user_id = {post.user_id}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = ({id, text, createdAt, user_id }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteById(id);\r\n  };\r\n\r\n  function onEdit(){\r\n    history.push(\"/posts/\"+ id + \"/edit\");\r\n  };\r\n\r\n  //delete a post by id (HTTP GET)\r\n  async function deleteById(id){\r\n    try{\r\n      let url = POST_API_BASE_URL + \"/\" + id + \"/delete\";\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json = await res.json();\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          refreshPage();\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error deleting post \", err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card elevation={3} className=\"Post\">\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" gutterBottom color=\"primary\" component=\"h2\">\r\n             {text}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n             {createdAt}\r\n          </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing style={{ width: '100%', justifyContent: 'flex-end' }}>\r\n        <IconButton aria-label=\"Edit Post\" onClick={onEdit} color=\"primary\">\r\n          <EditIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete Post\" onClick={onDelete} color=\"secondary\" edge=\"end\">\r\n          <DeleteIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </CardActions>\r\n      \r\n    </Card>\r\n  );\r\n};","D:\\Demos\\fullstack_react_express\\src\\posts\\post-fiche.component.js",["93","94"],"d:\\Demos\\fullstack_react_express\\src\\users\\user-liste.component.js",["95"],"d:\\Demos\\fullstack_react_express\\src\\users\\user-fiche.component.js",[],"d:\\Demos\\fullstack_react_express\\src\\posts\\post-fiche.component.js",["96","97"],"d:\\Demos\\fullstack_react_express\\src\\posts\\post-liste.component.js",["98","99","100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":16,"nodeType":"108","messageId":"109","endLine":4,"endColumn":22},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":3,"column":22,"nodeType":"108","messageId":"109","endLine":3,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":4,"column":21,"nodeType":"108","messageId":"109","endLine":4,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":136,"column":49,"nodeType":"114","endLine":136,"endColumn":61},{"ruleId":"106","severity":1,"message":"115","line":2,"column":33,"nodeType":"108","messageId":"109","endLine":2,"endColumn":42},{"ruleId":"106","severity":1,"message":"116","line":2,"column":61,"nodeType":"108","messageId":"109","endLine":2,"endColumn":67},{"ruleId":"106","severity":1,"message":"107","line":4,"column":16,"nodeType":"108","messageId":"109","endLine":4,"endColumn":22},{"ruleId":"106","severity":1,"message":"115","line":2,"column":33,"nodeType":"108","messageId":"109","endLine":2,"endColumn":42},{"ruleId":"106","severity":1,"message":"116","line":2,"column":61,"nodeType":"108","messageId":"109","endLine":2,"endColumn":67},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":3,"column":22,"nodeType":"108","messageId":"109","endLine":3,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":4,"column":21,"nodeType":"108","messageId":"109","endLine":4,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":136,"column":49,"nodeType":"114","endLine":136,"endColumn":61},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'CardHeader' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]