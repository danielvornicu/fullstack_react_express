{"version":3,"sources":["util.js","shared/constants.js","users/login.component.js","shared/AppHeader.component.js","users/user-liste.component.js","users/user-fiche.component.js","posts/post-liste.component.js","posts/post-fiche.component.js","App.js","reportWebVitals.js","index.js"],"names":["updateAppSettings","token","localStorage","setItem","jwt_decode","isAdmin","getItem","audience","includes","constructHeader","contentType","auth","Authorization","API_BASE_URL","headers","Headers","Login","useState","userName","setUserName","password","setPassword","loginError","setLoginError","history","useHistory","onClickLogin","a","set","base64","encode","fetch","method","res","json","message","access_token","push","console","log","Grid","container","direction","alignItems","style","marginTop","item","marginBottom","Typography","variant","color","fontSize","TextField","id","label","value","onChange","e","username","target","type","onChangePassword","Button","aria-label","size","onClick","AppHeader","tabValue","tabs","React","anchorEl","setAnchorEl","open","Boolean","shouldDisable","isMember","flexGrow","AppBar","position","Toolbar","Tabs","event","newValue","Tab","disabled","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","onClose","MenuItem","then","clear","USER_API_BASE_URL","UserListeComponent","users","setUsers","showPage","redirectToLoginPage","fetchUsers","status","url","useEffect","onDelete","deleteById","className","justify","gutterBottom","xs","map","user","key","_id","firstName","lastName","role","onEdit","User","Card","elevation","CardHeader","avatar","Avatar","charAt","title","CardContent","CardActions","disableSpacing","width","justifyContent","edge","UserFicheComponent","setUsername","setFirstName","setLastName","adminProfile","setAdminProfile","useParams","fetchUser","refresh_token","save","body","JSON","stringify","onChangeUsername","onChangeFirstName","onChangeLastName","Switch","checked","name","inputProps","prev","spacing","POST_API_BASE_URL","PostListeComponent","posts","setPosts","fetchPosts","formatDate","dateStr","date","Date","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","monthString","dayString","hoursString","minutesString","getFullYear","refreshPage","window","location","reload","post","text","createdAt","user_id","Post","component","PostFicheComponent","setText","fetchPost","TextareaAutosize","height","placeholder","onChangeText","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.180895fb.chunk.js","sourcesContent":["  \r\n//let jwt_decode = require(\"jwt-decode\"); //ES5 syntax \r\nimport jwt_decode from \"jwt-decode\"; //ES2015 (ES6)\r\n\r\nexport const updateAppSettings = (token) => {\r\n  //localStorage.clear();\r\n  if (token) {\r\n    //console.log(token);\r\n    localStorage.setItem(\"displayName\", jwt_decode(token)[\"sub\"]);\r\n    localStorage.setItem(\"access_token\", token);\r\n  }\r\n};\r\n\r\nexport const isAdmin = () => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (token) {\r\n    const audience = jwt_decode(token)[\"aud\"];\r\n    return audience.includes(\"SHOW_USERS\") && audience.includes(\"ADD_USER\");\r\n  }\r\n};\r\n\r\nexport const isMember = () => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (token) {\r\n    const audience = jwt_decode(token)[\"aud\"];\r\n    return !audience.includes(\"SHOW_USERS\") && !audience.includes(\"ADD_USER\");\r\n  }\r\n};\r\n\r\n\r\n//contruct header contentType is optional\r\nexport const constructHeader = (contentType) => {\r\n  const auth = \"Bearer \" + localStorage.getItem(\"access_token\") || \"\";\r\n  return contentType\r\n    ? { \"Content-type\": contentType, Authorization: auth }\r\n    : { Authorization: auth };\r\n};","//local\r\n//export const API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\n//Heroku\r\nexport const API_BASE_URL = \"https://fullstack-express-react.herokuapp.com/api\";","import React, { useState } from \"react\";\r\nimport { Grid, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport PostAdd from '@material-ui/icons/PostAdd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateAppSettings } from \"../util\";\r\n//let base64 = require(\"base-64\");\r\nimport base64 from \"base-64\"; //ES2015 (ES6)\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nlet headers = new Headers();\r\n\r\nconst url = API_BASE_URL + \"/users/login\";\r\n\r\nexport const Login = () => {\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onChangeUsername = (username) => setUserName(username);\r\n  const onChangePassword = (password) => setPassword(password);\r\n\r\n  const onClickLogin = async function () {\r\n    //name Authorization, value Basic xxx\r\n    headers.set(\r\n      \"Authorization\", \"Basic \" + base64.encode(userName + \":\" + password)\r\n    );\r\n\r\n    try{\r\n      let res = await fetch(url, { headers: headers, method: \"POST\" });\r\n      let json = await res.json();\r\n\r\n      if (json.message) { \r\n        setLoginError(json.message);\r\n      } else {\r\n          updateAppSettings(json.access_token);\r\n          history.push(\"/posts\");\r\n      }\r\n    } catch(err){\r\n      console.log(\"Error logging into app \", err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" style={{ marginTop: \"10vh\" }}>\r\n      <Grid item style={{ marginBottom: \"10vh\" }}>\r\n        <Typography variant=\"h3\" color=\"primary\">\r\n          Welcome to PostIt!\r\n          <PostAdd fontSize=\"large\" color=\"primary\"/>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item style={{ marginBottom: \"2vh\" }}>\r\n        <TextField \r\n          variant=\"outlined\" \r\n          id=\"username-input\"\r\n          label=\"username\"\r\n          value={userName}\r\n          onChange={(e) => onChangeUsername(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item style={{ marginBottom: \"2vh\" }}>\r\n        <TextField \r\n          variant=\"outlined\" \r\n          id=\"password-input\"\r\n          label=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => onChangePassword(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n        <Button\r\n          aria-label=\"login\"\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={onClickLogin}>Login\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant={\"body2\"} color={\"error\"}>\r\n          {loginError}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  MenuItem,\r\n  IconButton,\r\n  Menu,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { constructHeader, isMember } from \"../util\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst url = API_BASE_URL + \"/users/logout\";\r\n\r\nexport const AppHeader = ({ tabValue }) => {\r\n  const tabs = [\"/posts\", \"/posts/new\", \"/users\", \"/users/new\"];\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const history = useHistory();\r\n  const shouldDisable = isMember();\r\n\r\n  const handleClick = (event, newValue) => history.push(tabs[newValue]);\r\n\r\n  const handleMenu = (event) => setAnchorEl(event.currentTarget);\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onClickLogout = () => {\r\n    fetch(url, { headers: constructHeader() }).then((res) => {\r\n      localStorage.clear();\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Tabs value={tabValue} onChange={handleClick}>\r\n            <Tab label=\"Posts\" />\r\n            <Tab label=\"Add post\" />\r\n            <Tab label=\"Users\" disabled={shouldDisable} />\r\n            <Tab label=\"Add User\" disabled={shouldDisable} />\r\n          </Tabs>\r\n          <div style={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem>{localStorage.getItem(\"displayName\")}</MenuItem>\r\n            <MenuItem onClick={onClickLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, Grid, \r\n   Card, CardHeader, CardContent, CardActions, IconButton, \r\n   Typography, Button \r\n} from \"@material-ui/core\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, isAdmin, updateAppSettings } from \"../util\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst USER_API_BASE_URL = API_BASE_URL + \"/users\";\r\n\r\nexport const UserListeComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n  const showPage = isAdmin();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const fetchUsers = async function(){\r\n    try{\r\n      let res = await fetch(USER_API_BASE_URL, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          setUsers([...json.users]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error fetching users \", err.message);\r\n    }\r\n  };\r\n\r\n  //delete a user by id (HTTP GET)\r\n  async function deleteById(id){\r\n    try{\r\n      let url = USER_API_BASE_URL + \"/\" + id + \"/delete\";\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          //refreshPage();\r\n          setUsers([...json.users]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error deleting user \", err.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onEdit = (id) =>{\r\n    history.push(\"/users/\"+ id + \"/edit\");\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    deleteById(id);\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <AppHeader tabValue={2} />\r\n      {!showPage && (<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          Admin area only\r\n                        </Typography>\r\n                      </Grid>\r\n                     </Grid>)}\r\n      {showPage && (\r\n        <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n          <Grid item style={{ marginBottom: \"5vh\" }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              Users List\r\n            </Typography>\r\n          </Grid>\r\n          \r\n          <Grid item container justify=\"center\" xs={12}>\r\n            {users && users.map((user, key) => {\r\n              return (\r\n                <User\r\n                  id = {user._id}\r\n                  key={key}\r\n                  userName={user.username}\r\n                  firstName={user.firstName}\r\n                  lastName={user.lastName}\r\n                  role={user.role}\r\n                  onEdit = {(id) => onEdit(id)}\r\n                  onDelete = {(id) => onDelete(id)}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst User = ({id, firstName, lastName, userName, role, onEdit, onDelete }) => {\r\n\r\n  return (\r\n    <Card elevation={3} className=\"User\">\r\n\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"User Avatar\">\r\n            {userName.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            {userName + \" (\" + role + \") \"}\r\n          </Typography>\r\n        }\r\n      />\r\n\r\n      <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\r\n            {firstName + \" \" + lastName}\r\n          </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing style={{ width: '100%', justifyContent: 'flex-end' }} >\r\n        <IconButton aria-label=\"Edit Post\"  onClick={() => onEdit(id)} color=\"primary\">\r\n          <EditIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete Post\"  onClick={() => onDelete(id)} color=\"secondary\" edge=\"end\">\r\n          <DeleteIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n    </Card>\r\n\r\n\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Grid,Typography,Button,TextField, Switch } from \"@material-ui/core\";\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, isAdmin, updateAppSettings } from \"../util\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst USER_API_BASE_URL = API_BASE_URL + \"/users\";\r\n\r\n\r\nexport const UserFicheComponent = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [adminProfile, setAdminProfile] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const showPage = isAdmin();\r\n\r\n  const onChangeUsername = (username) => setUsername(username);\r\n  const onChangePassword = (password) => setPassword(password);\r\n  const onChangeFirstName = (firstName) => setFirstName(firstName);\r\n  const onChangeLastName = (lastName) => setLastName(lastName);\r\n\r\n\r\n  const toggleChecked = () => {\r\n    setAdminProfile((prev) => !prev);\r\n  };\r\n\r\n  const clearTextFields = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n  };\r\n\r\n  const redirectToLoginPage = () =>{\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id){\r\n      fetchUser(id);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const fetchUser = async function (id) {\r\n    try{\r\n\r\n      let url = USER_API_BASE_URL + \"/\" + id;\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.refresh_token);\r\n          //\r\n          setUsername(json.user.username);\r\n          setPassword(json.user.password);\r\n          setFirstName(json.user.firstName);\r\n          setLastName(json.user.lastName);\r\n          setAdminProfile(json.user.role === 'admin' ? true : false);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error getting user \", err.message);\r\n    }\r\n  }\r\n\r\n  const save = async function () {\r\n      try{\r\n        let url;\r\n        const user     = { _id : id,\r\n                            username: username, \r\n                            password: password || \"\", \r\n                            firstName: firstName, \r\n                            lastName: lastName, \r\n                            role: adminProfile ? 'admin': 'user'\r\n                         };\r\n        \r\n        if (typeof(id) === 'undefined'){//creation\r\n          url = USER_API_BASE_URL + '/new';\r\n        } else { //modification\r\n          url = USER_API_BASE_URL + '/' + user._id + '/edit';\r\n        }\r\n  \r\n        let res = await fetch(url, { headers: constructHeader(\"application/json\"),\r\n                                     method: \"POST\",\r\n                                     body: JSON.stringify(user),\r\n                                   });\r\n        if (res.status === 401){\r\n          redirectToLoginPage();\r\n        } else {\r\n          if (res.status === 200) clearTextFields();\r\n        }\r\n        let json = await res.json();\r\n  \r\n        if (json) {\r\n            updateAppSettings(json.access_token || \"\");\r\n            history.push(\"/users\");\r\n        }\r\n      }catch(err){\r\n        console.log(\"Error saving user \", err.message);\r\n      }\r\n  }\r\n\r\n  const onValidate = () => {\r\n    save();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/users\");\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if(typeof(id) === 'undefined'){\r\n        return \"Add New User\";\r\n    }else{\r\n        return \"Edit User \";\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"AddUser\">\r\n      <AppHeader tabValue={3} />\r\n      {!showPage && (<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          Admin area only\r\n                        </Typography>\r\n                      </Grid>\r\n                     </Grid>)}\r\n      {showPage && (\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n             {getTitle()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"username-input\"\r\n            variant=\"outlined\"\r\n            label=\"username\"\r\n            value={username}\r\n            onChange={(e) => onChangeUsername(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"password-input\"\r\n            variant=\"outlined\"\r\n            label=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChangePassword(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"firstName-input\"\r\n            variant=\"outlined\"\r\n            label=\"First Name\"\r\n            value={firstName}\r\n            onChange={(e) => onChangeFirstName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"lastName-input\"\r\n            variant=\"outlined\"\r\n            label=\"Last Name\"\r\n            value={lastName}\r\n            onChange={(e) => onChangeLastName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n             Admin profile:\r\n            <Switch\r\n              checked={adminProfile}\r\n              color=\"primary\"\r\n              name=\"isAdmin\"\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              onChange={toggleChecked}\r\n            />\r\n          </Typography>\r\n        </Grid>\r\n\r\n\r\n        <Grid item container direction=\"row\" spacing={1} alignItems=\"center\" justify=\"center\" style={{ marginBottom: \"7vh\" }}>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={onValidate}>Validate\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              onClick={onCancel}>Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, \r\n       Avatar, Card, CardHeader, CardContent, CardActions, IconButton, \r\n        Typography, Button \r\n       } from \"@material-ui/core\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, updateAppSettings } from \"../util\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst POST_API_BASE_URL = API_BASE_URL + \"/posts\";\r\n\r\nexport const PostListeComponent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const fetchPosts = async function(){\r\n    try{\r\n      let res = await fetch(POST_API_BASE_URL, { headers: constructHeader() });\r\n\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          setPosts([...json.posts]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error fetching posts \", err.message);\r\n    }\r\n  };\r\n\r\n  //delete a post by id (HTTP GET)\r\n  async function deleteById(id){\r\n    try{\r\n      let url = POST_API_BASE_URL + \"/\" + id + \"/delete\";\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json = await res.json();\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          //refreshPage();\r\n          setPosts([...json.posts]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error deleting post \", err.message);\r\n    }\r\n  }\r\n\r\n  function formatDate(dateStr) {\r\n    var date = new Date(dateStr);\r\n\r\n    const month = date.getMonth() + 1;\r\n    const day   = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n\r\n    const monthString = month >= 10 ? month : `0${month}`;\r\n    const dayString    = day >= 10 ? day : `0${day}`;\r\n    const hoursString = hours >= 10 ? hours : `0${hours}`;\r\n    const minutesString = minutes >= 10 ? minutes : `0${minutes}`;\r\n\r\n    return `${dayString}/${monthString}/${date.getFullYear()} at ${hoursString}h${minutesString}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onEdit = (id) => {\r\n    history.push(\"/posts/\"+ id + \"/edit\");\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    deleteById(id);\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <AppHeader tabValue={0} />\r\n      {(\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" >\r\n\r\n          <Grid item style={{ marginBottom: \"5vh\" }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              Posts List\r\n            </Typography>\r\n          </Grid>\r\n          \r\n          <Grid item container justify=\"center\" >\r\n            {posts && posts.map((post, key) => {\r\n              return (\r\n                <Post\r\n                  key={key}\r\n                  id = {post._id}\r\n                  text={post.text}\r\n                  createdAt = {formatDate(post.createdAt)}\r\n                  user_id = {post.user_id}\r\n                  onEdit = {(id) => onEdit(id)}\r\n                  onDelete = {(id) => onDelete(id)}\r\n                  refreshPage = {refreshPage}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = ({id, text, createdAt, user_id, onEdit, onDelete}) => {\r\n\r\n  return (\r\n    <Card elevation={3} className=\"Post\">\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" gutterBottom color=\"primary\" component=\"h2\">\r\n             {text}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n             {createdAt}\r\n          </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing style={{ width: '100%', justifyContent: 'flex-end' }}>\r\n        <IconButton aria-label=\"Edit Post\" onClick={() => onEdit(id)} color=\"primary\">\r\n          <EditIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete Post\" onClick={() =>onDelete(id)} color=\"secondary\" edge=\"end\">\r\n          <DeleteIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </CardActions>\r\n      \r\n    </Card>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Grid,Typography,Button,TextField, TextareaAutosize,Switch } from \"@material-ui/core\";\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, updateAppSettings } from \"../util\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst POST_API_BASE_URL = API_BASE_URL + \"/posts\";\r\n\r\nexport const PostFicheComponent = () => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const onChangeText = (text) => setText(text);\r\n\r\n  const clearTextFields = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const redirectToLoginPage = () =>{\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (id){\r\n      fetchPost(id);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const fetchPost = async function (id) {\r\n    try{\r\n      let url = POST_API_BASE_URL + \"/\" + id;\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.refresh_token);\r\n          //\r\n          setText(json.post.text);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error getting post \", err.message);\r\n    }\r\n  }\r\n\r\n  const save = async function () {\r\n      try{\r\n        let url;\r\n        const post     = {  _id : id,\r\n                            text: text\r\n                         };\r\n        \r\n        if (typeof(id) === 'undefined'){//creation\r\n          url = POST_API_BASE_URL + '/new';\r\n        } else { //modification\r\n          url = POST_API_BASE_URL + '/' + id + '/edit';\r\n        }\r\n  \r\n        let res = await fetch(url, { headers: constructHeader(\"application/json\"),\r\n                                     method: \"POST\",\r\n                                     body: JSON.stringify(post),\r\n                                   });\r\n \r\n        if (res.status === 200) \r\n          clearTextFields();\r\n        \r\n        let json = await res.json();\r\n  \r\n        if (json) {\r\n            updateAppSettings(json.access_token || \"\");\r\n            history.push(\"/posts\");\r\n        }\r\n      }catch(err){\r\n        console.log(\"Error saving post \", err.message);\r\n      }\r\n  }\r\n\r\n  const onValidate = () => {\r\n    save();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if(typeof(id) === 'undefined'){\r\n        return \"Add New Post\";\r\n    }else{\r\n        return \"Edit Post \";\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"AddPost\">\r\n      <AppHeader tabValue={1} />\r\n      {(\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n             {getTitle()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextareaAutosize style={{ width: 200, height: 100 }}\r\n            height = \"10em\"\r\n            placeholder=\"Add text\"\r\n            id=\"text-input\"\r\n            variant=\"outlined\"\r\n            label=\"Post\"\r\n            value={text}\r\n            onChange={(e) => onChangeText(e.target.value)}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item container direction=\"row\" spacing={1} alignItems=\"center\" justify=\"center\" style={{ marginBottom: \"7vh\" }}>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={onValidate}>Validate\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              onClick={onCancel}>Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"./users/login.component\";\r\nimport { UserListeComponent } from \"./users/user-liste.component\";\r\nimport { UserFicheComponent } from \"./users/user-fiche.component\";\r\nimport { PostListeComponent } from \"./posts/post-liste.component\";\r\nimport { PostFicheComponent } from \"./posts/post-fiche.component\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Login /></Route>\r\n          <Route exact path=\"/login\"><Login /></Route>\r\n          \r\n          <Route exact path=\"/users\"><UserListeComponent/></Route>\r\n          <Route exact path=\"/users/new\"><UserFicheComponent/></Route>\r\n          <Route exact path=\"/users/:id/edit\"><UserFicheComponent/></Route>   \r\n\r\n          <Route exact path=\"/posts\"><PostListeComponent/></Route> \r\n          <Route exact path=\"/posts/new\"><PostFicheComponent/></Route>\r\n          <Route exact path=\"/posts/:id/edit\"><PostFicheComponent/></Route>     \r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}