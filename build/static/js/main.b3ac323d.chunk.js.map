{"version":3,"sources":["util.js","users/login.component.js","shared/AppHeader.component.js","users/user-liste.component.js","users/user-fiche.component.js","posts/post-liste.component.js","posts/post-fiche.component.js","App.js","reportWebVitals.js","index.js","shared/constants.js"],"names":["updateAppSettings","token","console","log","localStorage","setItem","jwt_decode","isAdmin","getItem","audience","includes","constructHeader","contentType","auth","Authorization","headers","Headers","Login","useState","userName","setUserName","password","setPassword","loginError","setLoginError","history","useHistory","onClickLogin","a","set","base64","encode","fetch","method","res","json","message","access_token","push","Grid","container","direction","alignItems","style","marginTop","item","marginBottom","Typography","variant","color","fontSize","TextField","id","label","value","onChange","e","username","target","type","onChangePassword","Button","aria-label","size","onClick","AppHeader","tabValue","tabs","React","anchorEl","setAnchorEl","open","Boolean","shouldDisable","isMember","flexGrow","AppBar","position","Toolbar","Tabs","event","newValue","Tab","disabled","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","onClose","MenuItem","then","clear","USER_API_BASE_URL","API_BASE_URL","UserListeComponent","users","setUsers","showPage","fetchUsers","status","useEffect","className","justify","gutterBottom","xs","map","user","key","_id","firstName","lastName","role","User","redirectToLoginPage","refreshPage","window","location","reload","url","Card","elevation","CardHeader","avatar","Avatar","charAt","title","CardContent","CardActions","disableSpacing","width","justifyContent","deleteById","edge","UserFicheComponent","setUsername","setFirstName","setLastName","adminProfile","setAdminProfile","useParams","fetchUser","refresh_token","save","body","JSON","stringify","onChangeUsername","onChangeFirstName","onChangeLastName","Switch","checked","name","inputProps","prev","spacing","POST_API_BASE_URL","PostListeComponent","posts","setPosts","fetchPosts","formatDate","dateStr","date","Date","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","monthString","dayString","hoursString","minutesString","getFullYear","post","text","createdAt","user_id","Post","component","PostFicheComponent","setText","fetchPost","TextareaAutosize","height","placeholder","onChangeText","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b3ac323d.chunk.js","sourcesContent":["  \r\n//let jwt_decode = require(\"jwt-decode\"); //ES5 syntax \r\nimport jwt_decode from \"jwt-decode\"; //ES2015 (ES6)\r\n\r\nexport const updateAppSettings = (token) => {\r\n  //localStorage.clear();\r\n  if (token) {\r\n    console.log(token);\r\n    localStorage.setItem(\"displayName\", jwt_decode(token)[\"sub\"]);\r\n    localStorage.setItem(\"access_token\", token);\r\n  }\r\n};\r\n\r\nexport const isAdmin = () => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (token) {\r\n    const audience = jwt_decode(token)[\"aud\"];\r\n    return audience.includes(\"SHOW_USERS\") && audience.includes(\"ADD_USER\");\r\n  }\r\n};\r\n\r\nexport const isMember = () => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (token) {\r\n    const audience = jwt_decode(token)[\"aud\"];\r\n    return !audience.includes(\"SHOW_USERS\") && !audience.includes(\"ADD_USER\");\r\n  }\r\n};\r\n\r\n\r\n//contruct header contentType is optional\r\nexport const constructHeader = (contentType) => {\r\n  const auth = \"Bearer \" + localStorage.getItem(\"access_token\") || \"\";\r\n  return contentType\r\n    ? { \"Content-type\": contentType, Authorization: auth }\r\n    : { Authorization: auth };\r\n};","import React, { useState } from \"react\";\r\nimport { Grid, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport PostAdd from '@material-ui/icons/PostAdd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateAppSettings } from \"../util\";\r\n//let base64 = require(\"base-64\");\r\nimport base64 from \"base-64\"; //ES2015 (ES6)\r\nlet headers = new Headers();\r\nconst url = \"http://localhost:5000/api/users/login\";\r\n\r\nexport const Login = () => {\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onChangeUsername = (username) => setUserName(username);\r\n  const onChangePassword = (password) => setPassword(password);\r\n\r\n  const onClickLogin = async function () {\r\n    //name Authorization, value Basic xxx\r\n    headers.set(\r\n      \"Authorization\", \"Basic \" + base64.encode(userName + \":\" + password)\r\n    );\r\n\r\n    try{\r\n      let res = await fetch(url, { headers: headers, method: \"POST\" });\r\n      let json = await res.json();\r\n\r\n      if (json.message) { \r\n        setLoginError(json.message);\r\n      } else {\r\n          updateAppSettings(json.access_token);\r\n          history.push(\"/posts\");\r\n      }\r\n    } catch(err){\r\n      console.log(\"Error logging into app \", err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" style={{ marginTop: \"10vh\" }}>\r\n      <Grid item style={{ marginBottom: \"10vh\" }}>\r\n        <Typography variant=\"h3\" color=\"primary\">\r\n          Welcome to PostIt!\r\n          <PostAdd fontSize=\"large\" color=\"primary\"/>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item style={{ marginBottom: \"2vh\" }}>\r\n        <TextField \r\n          variant=\"outlined\" \r\n          id=\"username-input\"\r\n          label=\"username\"\r\n          value={userName}\r\n          onChange={(e) => onChangeUsername(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item style={{ marginBottom: \"2vh\" }}>\r\n        <TextField \r\n          variant=\"outlined\" \r\n          id=\"password-input\"\r\n          label=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => onChangePassword(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n        <Button\r\n          aria-label=\"login\"\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={onClickLogin}>Login\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant={\"body2\"} color={\"error\"}>\r\n          {loginError}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  MenuItem,\r\n  IconButton,\r\n  Menu,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { constructHeader, isMember } from \"../util\";\r\nconst url = \"http://localhost:5000/api/users/logout\";\r\n\r\nexport const AppHeader = ({ tabValue }) => {\r\n  const tabs = [\"/posts\", \"/posts/new\", \"/users\", \"/users/new\"];\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const history = useHistory();\r\n  const shouldDisable = isMember();\r\n\r\n  const handleClick = (event, newValue) => history.push(tabs[newValue]);\r\n\r\n  const handleMenu = (event) => setAnchorEl(event.currentTarget);\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onClickLogout = () => {\r\n    fetch(url, { headers: constructHeader() }).then((res) => {\r\n      localStorage.clear();\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Tabs value={tabValue} onChange={handleClick}>\r\n            <Tab label=\"Posts\" />\r\n            <Tab label=\"Add post\" />\r\n            <Tab label=\"Users\" disabled={shouldDisable} />\r\n            <Tab label=\"Add User\" disabled={shouldDisable} />\r\n          </Tabs>\r\n          <div style={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem>{localStorage.getItem(\"displayName\")}</MenuItem>\r\n            <MenuItem onClick={onClickLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, Grid, \r\n   Card, CardHeader, CardContent, CardActions, IconButton, \r\n   Typography, Button \r\n} from \"@material-ui/core\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, isAdmin, updateAppSettings } from \"../util\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst USER_API_BASE_URL = API_BASE_URL + \"/users\";\r\n\r\nexport const UserListeComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n  const showPage = isAdmin();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const fetchUsers = async function(){\r\n    try{\r\n      let res = await fetch(USER_API_BASE_URL, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          setUsers([...json.users]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error fetching users \", err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <AppHeader tabValue={2} />\r\n      {!showPage && (<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          Admin area only\r\n                        </Typography>\r\n                      </Grid>\r\n                     </Grid>)}\r\n      {showPage && (\r\n        <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n          <Grid item style={{ marginBottom: \"5vh\" }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              Users List\r\n            </Typography>\r\n          </Grid>\r\n          \r\n          <Grid item container justify=\"center\" xs={12}>\r\n            {users && users.map((user, key) => {\r\n              return (\r\n                <User\r\n                  id = {user._id}\r\n                  key={key}\r\n                  userName={user.username}\r\n                  firstName={user.firstName}\r\n                  lastName={user.lastName}\r\n                  role={user.role}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst User = ({id, firstName, lastName, userName, role }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteById(id);\r\n  };\r\n\r\n  function onEdit(){\r\n    history.push(\"/users/\"+ id + \"/edit\");\r\n  };\r\n\r\n  //delete a user by id (HTTP GET)\r\n  async function deleteById(id){\r\n    try{\r\n      let url = USER_API_BASE_URL + \"/\" + id + \"/delete\";\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          refreshPage();\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error deleting user \", err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card elevation={3} className=\"User\">\r\n\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"User Avatar\">\r\n            {userName.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            {userName + \" (\" + role + \") \"}\r\n          </Typography>\r\n        }\r\n      />\r\n\r\n      <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\r\n            {firstName + \" \" + lastName}\r\n          </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing style={{ width: '100%', justifyContent: 'flex-end' }} >\r\n        <IconButton aria-label=\"Edit Post\"  onClick={onEdit} color=\"primary\">\r\n          <EditIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete Post\"  onClick={onDelete} color=\"secondary\" edge=\"end\">\r\n          <DeleteIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n    </Card>\r\n\r\n\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Grid,Typography,Button,TextField, Switch } from \"@material-ui/core\";\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, isAdmin, updateAppSettings } from \"../util\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst USER_API_BASE_URL = API_BASE_URL + \"/users\";\r\n\r\n\r\nexport const UserFicheComponent = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [adminProfile, setAdminProfile] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const showPage = isAdmin();\r\n\r\n  const onChangeUsername = (username) => setUsername(username);\r\n  const onChangePassword = (password) => setPassword(password);\r\n  const onChangeFirstName = (firstName) => setFirstName(firstName);\r\n  const onChangeLastName = (lastName) => setLastName(lastName);\r\n\r\n\r\n  const toggleChecked = () => {\r\n    setAdminProfile((prev) => !prev);\r\n  };\r\n\r\n  const clearTextFields = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n  };\r\n\r\n  const redirectToLoginPage = () =>{\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUser(id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchUser = async function (id) {\r\n    try{\r\n\r\n      let url;\r\n      if(typeof(id) === 'undefined'){\r\n        url = USER_API_BASE_URL + \"/new\";\r\n      } else {\r\n        url = USER_API_BASE_URL + \"/\" + id;\r\n      }\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.refresh_token);\r\n          //\r\n          setUsername(json.user.username);\r\n          setPassword(json.user.password);\r\n          setFirstName(json.user.firstName);\r\n          setLastName(json.user.lastName);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error getting user \", err.message);\r\n    }\r\n  }\r\n\r\n  const save = async function () {\r\n      try{\r\n        let url;\r\n        const user     = { _id : id,\r\n                            username: username, \r\n                            password: password || \"\", \r\n                            firstName: firstName, \r\n                            lastName: lastName, \r\n                            role: adminProfile ? 'admin': 'user'\r\n                         };\r\n        \r\n        if (typeof(id) === 'undefined'){//creation\r\n          url = USER_API_BASE_URL + '/new';\r\n        } else { //modification\r\n          url = USER_API_BASE_URL + '/' + user._id + '/edit';\r\n        }\r\n  \r\n        let res = await fetch(url, { headers: constructHeader(\"application/json\"),\r\n                                     method: \"POST\",\r\n                                     body: JSON.stringify(user),\r\n                                   });\r\n        if (res.status === 401){\r\n          redirectToLoginPage();\r\n        } else {\r\n          if (res.status === 200) clearTextFields();\r\n        }\r\n        let json = await res.json();\r\n  \r\n        if (json) {\r\n            updateAppSettings(json.access_token || \"\");\r\n            history.push(\"/users\");\r\n        }\r\n      }catch(err){\r\n        console.log(\"Error saving user \", err.message);\r\n      }\r\n  }\r\n\r\n  const onValidate = () => {\r\n    save();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/users\");\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if(typeof(id) === 'undefined'){\r\n        return \"Add New User\";\r\n    }else{\r\n        return \"Edit User \";\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"AddUser\">\r\n      <AppHeader tabValue={3} />\r\n      {!showPage && (<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                      <Grid item style={{ marginBottom: \"5vh\" }}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          Admin area only\r\n                        </Typography>\r\n                      </Grid>\r\n                     </Grid>)}\r\n      {showPage && (\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n             {getTitle()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"username-input\"\r\n            variant=\"outlined\"\r\n            label=\"username\"\r\n            value={username}\r\n            onChange={(e) => onChangeUsername(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"password-input\"\r\n            variant=\"outlined\"\r\n            label=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChangePassword(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"firstName-input\"\r\n            variant=\"outlined\"\r\n            label=\"First Name\"\r\n            value={firstName}\r\n            onChange={(e) => onChangeFirstName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextField\r\n            id=\"lastName-input\"\r\n            variant=\"outlined\"\r\n            label=\"Last Name\"\r\n            value={lastName}\r\n            onChange={(e) => onChangeLastName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n             Admin profile:\r\n            <Switch\r\n              checked={adminProfile}\r\n              color=\"primary\"\r\n              name=\"isAdmin\"\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              onChange={toggleChecked}\r\n            />\r\n          </Typography>\r\n        </Grid>\r\n\r\n\r\n        <Grid item container direction=\"row\" spacing={1} alignItems=\"center\" justify=\"center\" style={{ marginBottom: \"7vh\" }}>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={onValidate}>Validate\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              onClick={onCancel}>Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, \r\n       Avatar, Card, CardHeader, CardContent, CardActions, IconButton, \r\n        Typography, Button \r\n       } from \"@material-ui/core\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, updateAppSettings } from \"../util\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst POST_API_BASE_URL = API_BASE_URL + \"/posts\";\r\n\r\nexport const PostListeComponent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const redirectToLoginPage = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const fetchPosts = async function(){\r\n    try{\r\n      let res = await fetch(POST_API_BASE_URL, { headers: constructHeader() });\r\n\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          setPosts([...json.posts]);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error fetching posts \", err.message);\r\n    }\r\n  };\r\n\r\n  function formatDate(dateStr) {\r\n    var date = new Date(dateStr);\r\n\r\n    const month = date.getMonth() + 1;\r\n    const day   = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n\r\n    const monthString = month >= 10 ? month : `0${month}`;\r\n    const dayString    = day >= 10 ? day : `0${day}`;\r\n    const hoursString = hours >= 10 ? hours : `0${hours}`;\r\n    const minutesString = minutes >= 10 ? minutes : `0${minutes}`;\r\n\r\n    return `${dayString}/${monthString}/${date.getFullYear()} at ${hoursString}h${minutesString}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <AppHeader tabValue={0} />\r\n      {(\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" >\r\n\r\n          <Grid item style={{ marginBottom: \"5vh\" }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              Posts List\r\n            </Typography>\r\n          </Grid>\r\n          \r\n          <Grid item container justify=\"center\" >\r\n            {posts && posts.map((post, key) => {\r\n              return (\r\n                <Post\r\n                  key={key}\r\n                  id = {post._id}\r\n                  text={post.text}\r\n                  createdAt = {formatDate(post.createdAt)}\r\n                  user_id = {post.user_id}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = ({id, text, createdAt, user_id }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteById(id);\r\n  };\r\n\r\n  function onEdit(){\r\n    history.push(\"/posts/\"+ id + \"/edit\");\r\n  };\r\n\r\n  //delete a post by id (HTTP GET)\r\n  async function deleteById(id){\r\n    try{\r\n      let url = POST_API_BASE_URL + \"/\" + id + \"/delete\";\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json = await res.json();\r\n      if (json) {\r\n          updateAppSettings(json.access_token);\r\n          refreshPage();\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error deleting post \", err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card elevation={3} className=\"Post\">\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" gutterBottom color=\"primary\" component=\"h2\">\r\n             {text}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n             {createdAt}\r\n          </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing style={{ width: '100%', justifyContent: 'flex-end' }}>\r\n        <IconButton aria-label=\"Edit Post\" onClick={onEdit} color=\"primary\">\r\n          <EditIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete Post\" onClick={onDelete} color=\"secondary\" edge=\"end\">\r\n          <DeleteIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </CardActions>\r\n      \r\n    </Card>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Grid,Typography,Button,TextField, TextareaAutosize,Switch } from \"@material-ui/core\";\r\nimport \"../styles.css\";\r\nimport { AppHeader } from \"../shared/AppHeader.component\";\r\nimport { constructHeader, updateAppSettings } from \"../util\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from \"../shared/constants\";\r\n\r\nconst POST_API_BASE_URL = API_BASE_URL + \"/posts\";\r\n\r\nexport const PostFicheComponent = () => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const onChangeText = (text) => setText(text);\r\n\r\n  const clearTextFields = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const redirectToLoginPage = () =>{\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPost(id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchPost = async function (id) {\r\n    try{\r\n      let url;\r\n      if(typeof(id) === 'undefined'){\r\n        url = POST_API_BASE_URL + \"/new\";\r\n      } else {\r\n        url = POST_API_BASE_URL + \"/\" + id;\r\n      }\r\n\r\n      let res = await fetch(url, { headers: constructHeader() });\r\n      let json;\r\n      if (res.status === 401){\r\n        redirectToLoginPage();\r\n      } else {\r\n        json = await res.json();\r\n      }\r\n\r\n      if (json) {\r\n          updateAppSettings(json.refresh_token);\r\n          //\r\n          setText(json.post.text);\r\n      }\r\n\r\n    } catch(err){\r\n      console.log(\"Error getting post \", err.message);\r\n    }\r\n  }\r\n\r\n  const save = async function () {\r\n      try{\r\n        let url;\r\n        const post     = {  _id : id,\r\n                            text: text\r\n                         };\r\n        \r\n        if (typeof(id) === 'undefined'){//creation\r\n          url = POST_API_BASE_URL + '/new';\r\n        } else { //modification\r\n          url = POST_API_BASE_URL + '/' + id + '/edit';\r\n        }\r\n  \r\n        let res = await fetch(url, { headers: constructHeader(\"application/json\"),\r\n                                     method: \"POST\",\r\n                                     body: JSON.stringify(post),\r\n                                   });\r\n \r\n        if (res.status === 200) \r\n          clearTextFields();\r\n        \r\n        let json = await res.json();\r\n  \r\n        if (json) {\r\n            updateAppSettings(json.access_token || \"\");\r\n            history.push(\"/posts\");\r\n        }\r\n      }catch(err){\r\n        console.log(\"Error saving post \", err.message);\r\n      }\r\n  }\r\n\r\n  const onValidate = () => {\r\n    save();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if(typeof(id) === 'undefined'){\r\n        return \"Add New Post\";\r\n    }else{\r\n        return \"Edit Post \";\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"AddPost\">\r\n      <AppHeader tabValue={1} />\r\n      {(\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n             {getTitle()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginBottom: \"5vh\" }}>\r\n          <TextareaAutosize style={{ width: 200, height: 100 }}\r\n            height = \"10em\"\r\n            placeholder=\"Add text\"\r\n            id=\"text-input\"\r\n            variant=\"outlined\"\r\n            label=\"Post\"\r\n            value={text}\r\n            onChange={(e) => onChangeText(e.target.value)}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item container direction=\"row\" spacing={1} alignItems=\"center\" justify=\"center\" style={{ marginBottom: \"7vh\" }}>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={onValidate}>Validate\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              aria-label=\"login\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              onClick={onCancel}>Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"./users/login.component\";\r\nimport { UserListeComponent } from \"./users/user-liste.component\";\r\nimport { UserFicheComponent } from \"./users/user-fiche.component\";\r\nimport { PostListeComponent } from \"./posts/post-liste.component\";\r\nimport { PostFicheComponent } from \"./posts/post-fiche.component\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Login /></Route>\r\n          <Route exact path=\"/login\"><Login /></Route>\r\n          \r\n          <Route exact path=\"/users\"><UserListeComponent/></Route>\r\n          <Route exact path=\"/users/new\"><UserFicheComponent/></Route>\r\n          <Route exact path=\"/users/:id/edit\"><UserFicheComponent/></Route>   \r\n\r\n          <Route exact path=\"/posts\"><PostListeComponent/></Route> \r\n          <Route exact path=\"/posts/new\"><PostFicheComponent/></Route>\r\n          <Route exact path=\"/posts/:id/edit\"><PostFicheComponent/></Route>     \r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","//local\r\n//module.exports.API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\n//Heroku\r\nmodule.exports.API_BASE_URL = \"https://fullstack-express-react.herokuapp.com/api\";"],"sourceRoot":""}